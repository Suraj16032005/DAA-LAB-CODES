public class DistinctSubsequences {
    public static int countWays(String A, String B) {
        int m = A.length();
        int n = B.length();
        
        int[][] dp = new int[m + 1][n + 1];
        
        // Base case: If B is empty, 1 way to match
        for (int i = 0; i <= m; i++) {
            dp[i][n] = 1;
        }
        
        // Fill dp from bottom to top
        for (int i = m - 1; i >= 0; i--) {
            for (int j = n - 1; j >= 0; j--) {
                if (A.charAt(i) == B.charAt(j)) {
                    dp[i][j] = dp[i + 1][j + 1] + dp[i + 1][j];
                } else {
                    dp[i][j] = dp[i + 1][j];
                }
            }
        }
        
        return dp[0][0];
    }
    
    public static void main(String[] args) {
        String A = "babgbag";
        String B = "bag";
        
        System.out.println("Number of unique ways: " + countWays(A, B));
    }
}
