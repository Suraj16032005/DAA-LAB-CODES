PROBLEM 1----> CHECK IF THERE EXISTS A PATH FROM NODE 1 TO NODE A
(where A is the no of vertices in the graph)
(where Node 1 is the starting vertex of the graph)


C++ IMPLEMENTATION:

#include <iostream>
#include<queue>
using namespace std;

  bool check(int arr[][2], int nodes, int edges, int target){
      int matrix[nodes][nodes];
      
      for(int i=0;i<nodes;i++){
          for(int j=0;j<nodes;j++){
              matrix[i][j]=0;
          }
      }
      
      for(int i=0;i<edges;i++){
          matrix[arr[i][0]-1][arr[i][1]-1]=1;
      }//readied the matrix
      
     for(int i=0;i<nodes;i++){
          for(int j=0;j<nodes;j++){
              cout<<matrix[i][j];
          }
          cout<<" "<<endl;
      }
      
      queue<int> q;
      int visited[nodes];
      for(int i=0;i<nodes;i++){
          visited[i]=0;
      }
      
      q.push(0);
      visited[0]=1;
      while(!q.empty()){
        int num=q.front();
        q.pop();
        for(int i=0;i<nodes;i++){
            if(visited[i]==0 && matrix[num][i]==1){
                if(target-1==i){
                    return true;
                }
                q.push(i);
                visited[i]=1;
            }
        }
      }
      return false;
  }
  
  
int main()
{
  cout<<"enter the number of nodes"<<endl;
  int nodes;
  cin>>nodes;
  cout<<"enter the number of edges"<<endl;
  int edges;
  cin>>edges;
  int arr[edges][2];
  cout<<"enter the edges: "<<endl;
  for(int i=0;i<edges;i++){
      cin>>arr[i][0];
      cin>>arr[i][1];
    }
    int target=nodes;
    bool ans=check(arr, nodes, edges, target);
    cout<<"answer is"<< ans;
    return 0;
}
