#include<stdio.h>
#include<stdlib.h>

void dfs(int row, int column, int n, int visited[][n], int matrix[][n], int d[][2]){
    visited[row][column]=1;
  for(int i=0;i<4;i++){
    int nr=row+d[i][0];
    int nc=column+d[i][1];

    if(visited[nr][nc]==1){
        continue;
    }
    if(nr<0 || nr>=n || nc<0 || nc>=n){
        continue;
    }
    if(matrix[row][column]>matrix[nr][nc]){
        continue;
    }
    dfs(nr,nc,n,visited,matrix,d);
  }
}



int main(){
printf("enter the size of the matrix: ");
int n;
scanf("%d", &n);
int blue[n][n];
for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
        blue[i][j]=0;
    }
}
int red[n][n];
for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
        red[i][j]=0;
    }
}

int matrix[][3]={
    {1,4,2}, {5,1,3}, {4,2,5}
};

int d[][2]={{0,1},{1,0},{0,-1},{-1,0}};

for(int i=0;i<n;i++){
    blue[i][0]=1;
    blue[0][i]=1;
    red[n-1][i]=1;
    red[i][n-1]=1;
}

for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
        printf("%d ", blue[i][j]);
    }
    printf("\n");
}

for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
        printf("%d ", red[i][j]);
    }
    printf("\n");
}
 
 for(int i=0;i<n;i++){
    dfs(0,i,n,blue,matrix, d);
    dfs(i,0,n,blue, matrix, d);
 }

 for(int i=0;i<n;i++){
    dfs(i,n-1,n,red,matrix,d);
    dfs(n-1,i,n,red,matrix,d);
 }

 for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
        if(blue[i][j]==1 && red[i][j]==1){
            printf("%d,%d \n", i,j);
        }
    }
 }
 
    return 0;
}
